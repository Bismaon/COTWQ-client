{"ast":null,"code":"// QuizControl.tsx\nimport React,{useState}from'react';import'../stylesheet/QuizControl.css';import'../stylesheet/style.css';import{handleTextboxChange}from'../components/ThreeScene';import CountryInfo from'./CountryInfo';import{Timer}from'../utils/Timer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizControl=_ref=>{let{gameMode}=_ref;const[isQuizStarted,setIsQuizStarted]=useState(false);const gameTimer=new Timer();const handleStart=()=>{setIsQuizStarted(true);gameTimer.start();};const handlePause=()=>{setIsQuizStarted(false);gameTimer.stop();// Add any other logic needed when pausing the quiz\n};return/*#__PURE__*/_jsxs(\"div\",{id:\"quiz-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"quiz-controls-table\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"timer-cell\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"timer\",children:\"00:00:00\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",id:\"give-up-btn\",children:\"Give Up\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quiz-actions\",children:!isQuizStarted?/*#__PURE__*/_jsx(\"button\",{className:\"button\",id:\"start-btn\",onClick:handleStart,children:\"Start\"}):/*#__PURE__*/_jsx(\"button\",{className:\"button\",id:\"pause-btn\",onClick:handlePause,children:\"Pause\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"answer-box-container\",children:[/*#__PURE__*/_jsx(\"label\",{id:\"answer-box-text\",htmlFor:\"textbox\",children:\"Enter Country's Name\\xA0:\\xA0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"answer-box-input\",name:\"textbox\",onInput:event=>handleTextboxChange(event,gameTimer),autoComplete:\"off\",autoCorrect:\"off\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"guessed-line\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"country-counter\",children:\"0\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\xA0/\\xA0191 guessed\"})]})]})]}),/*#__PURE__*/_jsx(CountryInfo,{})]});};//! MOVE FOLLOW COUNTRY TO THE RIGHT OF ENTER COUNTRY INFO\nexport default QuizControl;","map":{"version":3,"names":["React","useState","handleTextboxChange","CountryInfo","Timer","jsx","_jsx","jsxs","_jsxs","QuizControl","_ref","gameMode","isQuizStarted","setIsQuizStarted","gameTimer","handleStart","start","handlePause","stop","id","children","className","onClick","htmlFor","type","name","onInput","event","autoComplete","autoCorrect"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/pages/QuizControl.tsx"],"sourcesContent":["// QuizControl.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport '../stylesheet/QuizControl.css'\r\nimport '../stylesheet/style.css';\r\nimport { handleTextboxChange } from '../components/ThreeScene';\r\nimport CountryInfo from './CountryInfo';\r\nimport { Timer } from '../utils/Timer';\r\n\r\nconst QuizControl: React.FC <{gameMode:string}>= ({gameMode}) => {\r\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\r\n  const gameTimer = new Timer();\r\n  const handleStart = () => {\r\n    setIsQuizStarted(true);\r\n    gameTimer.start();\r\n  };\r\n\r\n  const handlePause = () => {\r\n    setIsQuizStarted(false);\r\n    gameTimer.stop();\r\n    // Add any other logic needed when pausing the quiz\r\n  };\r\n  return (\r\n    <div id=\"quiz-controls\">\r\n      <div id=\"quiz-controls-table\">\r\n        <div id='timer-cell'>\r\n          <div id=\"timer\">00:00:00</div>\r\n          <button className=\"button\" id=\"give-up-btn\">Give Up</button>\r\n        </div>\r\n        <div className='quiz-actions'>\r\n          {!isQuizStarted ? (\r\n            <button className=\"button\" id=\"start-btn\" onClick={handleStart}>Start</button>\r\n          ) : (\r\n            <button className=\"button\" id=\"pause-btn\" onClick={handlePause}>Pause</button>\r\n          )}\r\n        </div>\r\n        <div id='answer-box-container'>\r\n          <label id=\"answer-box-text\" htmlFor=\"textbox\" >Enter Country's Name&nbsp;:&nbsp;</label>\r\n          <input type=\"text\" id=\"answer-box-input\" name=\"textbox\" \r\n          onInput={(event) => handleTextboxChange(event, gameTimer)} autoComplete='off' autoCorrect='off'></input>\r\n          <div id=\"guessed-line\">\r\n            <div id=\"country-counter\">0</div><div>&nbsp;/&nbsp;191 guessed</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <CountryInfo/>\r\n    </div>\r\n  );\r\n};\r\n//! MOVE FOLLOW COUNTRY TO THE RIGHT OF ENTER COUNTRY INFO\r\nexport default QuizControl;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,+BAA+B,CACtC,MAAO,yBAAyB,CAChC,OAASC,mBAAmB,KAAQ,0BAA0B,CAC9D,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,KAAK,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,WAAyC,CAAEC,IAAA,EAAgB,IAAf,CAACC,QAAQ,CAAC,CAAAD,IAAA,CAC1D,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAAAa,SAAS,CAAG,GAAI,CAAAV,KAAK,CAAC,CAAC,CAC7B,KAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CACxBF,gBAAgB,CAAC,IAAI,CAAC,CACtBC,SAAS,CAACE,KAAK,CAAC,CAAC,CACnB,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxBJ,gBAAgB,CAAC,KAAK,CAAC,CACvBC,SAAS,CAACI,IAAI,CAAC,CAAC,CAChB;AACF,CAAC,CACD,mBACEV,KAAA,QAAKW,EAAE,CAAC,eAAe,CAAAC,QAAA,eACrBZ,KAAA,QAAKW,EAAE,CAAC,qBAAqB,CAAAC,QAAA,eAC3BZ,KAAA,QAAKW,EAAE,CAAC,YAAY,CAAAC,QAAA,eAClBd,IAAA,QAAKa,EAAE,CAAC,OAAO,CAAAC,QAAA,CAAC,UAAQ,CAAK,CAAC,cAC9Bd,IAAA,WAAQe,SAAS,CAAC,QAAQ,CAACF,EAAE,CAAC,aAAa,CAAAC,QAAA,CAAC,SAAO,CAAQ,CAAC,EACzD,CAAC,cACNd,IAAA,QAAKe,SAAS,CAAC,cAAc,CAAAD,QAAA,CAC1B,CAACR,aAAa,cACbN,IAAA,WAAQe,SAAS,CAAC,QAAQ,CAACF,EAAE,CAAC,WAAW,CAACG,OAAO,CAAEP,WAAY,CAAAK,QAAA,CAAC,OAAK,CAAQ,CAAC,cAE9Ed,IAAA,WAAQe,SAAS,CAAC,QAAQ,CAACF,EAAE,CAAC,WAAW,CAACG,OAAO,CAAEL,WAAY,CAAAG,QAAA,CAAC,OAAK,CAAQ,CAC9E,CACE,CAAC,cACNZ,KAAA,QAAKW,EAAE,CAAC,sBAAsB,CAAAC,QAAA,eAC5Bd,IAAA,UAAOa,EAAE,CAAC,iBAAiB,CAACI,OAAO,CAAC,SAAS,CAAAH,QAAA,CAAE,+BAAiC,CAAO,CAAC,cACxFd,IAAA,UAAOkB,IAAI,CAAC,MAAM,CAACL,EAAE,CAAC,kBAAkB,CAACM,IAAI,CAAC,SAAS,CACvDC,OAAO,CAAGC,KAAK,EAAKzB,mBAAmB,CAACyB,KAAK,CAAEb,SAAS,CAAE,CAACc,YAAY,CAAC,KAAK,CAACC,WAAW,CAAC,KAAK,CAAQ,CAAC,cACxGrB,KAAA,QAAKW,EAAE,CAAC,cAAc,CAAAC,QAAA,eACpBd,IAAA,QAAKa,EAAE,CAAC,iBAAiB,CAAAC,QAAA,CAAC,GAAC,CAAK,CAAC,cAAAd,IAAA,QAAAc,QAAA,CAAK,sBAAwB,CAAK,CAAC,EACjE,CAAC,EACH,CAAC,EACH,CAAC,cAENd,IAAA,CAACH,WAAW,GAAC,CAAC,EACX,CAAC,CAEV,CAAC,CACD;AACA,cAAe,CAAAM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}