{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esteb\\\\Documents\\\\GitHub\\\\COTWQ-server\\\\client\\\\src\\\\components\\\\UserForm.tsx\",\n  _s = $RefreshSig$();\n// UserForm.tsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userID, setLocalUserID] = useState('');\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState('');\n  const handleSubmitCreateUser = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const newUser = await response.json();\n        console.log('New user created:', newUser);\n        // Clear form fields after successful submission\n        setUsername('');\n        setPassword('');\n        // Optionally display success message\n        alert('User created successfully!');\n      } else {\n        const errorText = await response.text();\n        setError(`Failed to create user: ${errorText}`);\n      }\n    } catch (error) {\n      console.error('Error creating user:', error);\n      // Handle error\n    }\n  };\n  const handleSubmitFetchUser = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('/users/fetch-user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: userID\n        })\n      });\n      if (response.ok) {\n        const fetchedUser = await response.json();\n        setUserData(fetchedUser);\n        console.log('Fetched user data:', fetchedUser);\n      } else {\n        const errorText = await response.text();\n        setError(`Failed to fetch user: ${errorText}`);\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      // Handle error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitCreateUser,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitFetchUser,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter User ID to Fetch:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userID,\n          onChange: e => setLocalUserID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Fetch User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", userData.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Highscores:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(userData.highscores).map(([game, score]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [game, \": \", score]\n        }, game, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"Gx2sveq4ONWzoOBAudofokjoUXc=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserForm","_s","username","setUsername","password","setPassword","userID","setLocalUserID","userData","setUserData","error","setError","handleSubmitCreateUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","newUser","json","console","log","alert","errorText","text","handleSubmitFetchUser","id","fetchedUser","children","onSubmit","type","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","highscores","map","game","score","style","color","_c","$RefreshReg$"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/components/UserForm.tsx"],"sourcesContent":["// UserForm.tsx\nimport React, { useState } from 'react';\nimport { UserModel } from '../models/UserModel';\n\n\nconst UserForm: React.FC = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userID, setLocalUserID] = useState('');\n  const [userData, setUserData] = useState<UserModel|null>(null);\n  const [error, setError] = useState<string>('');\n\n  \n  const handleSubmitCreateUser = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        const newUser = await response.json();\n        console.log('New user created:', newUser);\n        // Clear form fields after successful submission\n        setUsername('');\n        setPassword('');\n        // Optionally display success message\n        alert('User created successfully!');\n      } else {\n        const errorText = await response.text();\n        setError(`Failed to create user: ${errorText}`);\n      }\n    } catch (error) {\n      console.error('Error creating user:', error);\n      // Handle error\n    }\n  };\n\n  const handleSubmitFetchUser = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('/users/fetch-user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id: userID }),\n      });\n\n      if (response.ok) {\n        const fetchedUser = await response.json();\n        setUserData(fetchedUser);\n        console.log('Fetched user data:', fetchedUser);\n      } else {\n        const errorText = await response.text();\n        setError(`Failed to fetch user: ${errorText}`);\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      // Handle error\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmitCreateUser}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Create User</button>\n      </form>\n\n      <hr />\n\n      <form onSubmit={handleSubmitFetchUser}>\n        <label>\n          Enter User ID to Fetch:\n          <input\n            type=\"text\"\n            value={userID}\n            onChange={(e) => setLocalUserID(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Fetch User Data</button>\n      </form>\n\n      {userData && (\n        <div>\n          <h2>User Data</h2>\n          <p>ID: {userData.id}</p>\n          <p>Username: {userData.username}</p>\n          <h3>Highscores:</h3>\n          <ul>\n            {Object.entries(userData.highscores).map(([game, score]: [string, number]) => (\n              <li key={game}>\n                {game}: {score}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default UserForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}