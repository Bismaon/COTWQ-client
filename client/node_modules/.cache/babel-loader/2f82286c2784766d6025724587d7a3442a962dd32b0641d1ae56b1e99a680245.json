{"ast":null,"code":"// Timer.ts\n\n/**\r\n * A class representing a timer.\r\n */\nexport class Timer {\n  /**\r\n   * Creates an instance of Timer.\r\n   */\n  constructor() {\n    this.seconds = void 0;\n    this.minutes = void 0;\n    this.hours = void 0;\n    this.timerElement = void 0;\n    this.intervalId = void 0;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.hours = 0;\n    this.timerElement = document.getElementById(\"timer\");\n    this.intervalId = null;\n  }\n\n  /**\r\n   * Starts the timer interval.\r\n   */\n  start() {\n    this.intervalId = setInterval(() => {\n      this.seconds++;\n      if (this.seconds >= 60) {\n        this.seconds = 0;\n        this.minutes++;\n        if (this.minutes >= 60) {\n          this.minutes = 0;\n          this.hours++;\n        }\n      }\n      this.updateDisplay();\n    }, 1000);\n  }\n\n  /**\r\n   * Stops the timer interval.\r\n   */\n  stop() {\n    if (this.intervalId == null) {\n      this.start();\n    } else {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  /**\r\n   * Resets the timer to zero.\r\n   */\n  reset() {\n    this.seconds = 0;\n    this.minutes = 0;\n    this.hours = 0;\n    this.updateDisplay();\n  }\n\n  /**\r\n   * Updates the timer display element with the current time.\r\n   */\n  updateDisplay() {\n    const displayHours = this.hours < 10 ? \"0\" + this.hours : this.hours;\n    const displayMinutes = this.minutes < 10 ? \"0\" + this.minutes : this.minutes;\n    const displaySeconds = this.seconds < 10 ? \"0\" + this.seconds : this.seconds;\n    this.timerElement.textContent = `${displayHours}:${displayMinutes}:${displaySeconds}`;\n  }\n\n  /**\r\n   * Returns the timer as a string in the format \"hours:minutes:seconds\".\r\n   * @returns The timer as a string.\r\n   */\n  toString() {\n    return `${this.hours}:${this.minutes}:${this.seconds}`;\n  }\n\n  /**\r\n   * Returns the timer as a number (hours * 10000 + minutes * 100 + seconds).\r\n   * @returns The timer as a number.\r\n   */\n  toNumber() {\n    return this.hours * 10000 + this.minutes * 100 + this.seconds;\n  }\n}","map":{"version":3,"names":["Timer","constructor","seconds","minutes","hours","timerElement","intervalId","document","getElementById","start","setInterval","updateDisplay","stop","clearInterval","reset","displayHours","displayMinutes","displaySeconds","textContent","toString","toNumber"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/server/client/src/utils/Timer.ts"],"sourcesContent":["// Timer.ts\r\n\r\n/**\r\n * A class representing a timer.\r\n */\r\nexport class Timer {\r\n\tprotected seconds: number;\r\n\tprotected minutes: number;\r\n\tprotected hours: number;\r\n\tprotected timerElement: HTMLElement;\r\n\tprotected intervalId: NodeJS.Timeout | null;\r\n\r\n\t/**\r\n\t * Creates an instance of Timer.\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.seconds = 0;\r\n\t\tthis.minutes = 0;\r\n\t\tthis.hours = 0;\r\n\t\tthis.timerElement = document.getElementById(\"timer\") as HTMLElement;\r\n\t\tthis.intervalId = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Starts the timer interval.\r\n\t */\r\n\tpublic start(): void {\r\n\t\tthis.intervalId = setInterval(() => {\r\n\t\t\tthis.seconds++;\r\n\t\t\tif (this.seconds >= 60) {\r\n\t\t\t\tthis.seconds = 0;\r\n\t\t\t\tthis.minutes++;\r\n\t\t\t\tif (this.minutes >= 60) {\r\n\t\t\t\t\tthis.minutes = 0;\r\n\t\t\t\t\tthis.hours++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.updateDisplay();\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\t/**\r\n\t * Stops the timer interval.\r\n\t */\r\n\tpublic stop(): void {\r\n\t\tif (this.intervalId==null){\r\n\t\t\tthis.start();\r\n\t\t}else {\r\n\t\t\tclearInterval(this.intervalId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the timer to zero.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis.seconds = 0;\r\n\t\tthis.minutes = 0;\r\n\t\tthis.hours = 0;\r\n\t\tthis.updateDisplay();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the timer display element with the current time.\r\n\t */\r\n\tpublic updateDisplay(): void {\r\n\t\tconst displayHours: string | number = this.hours < 10 ? \"0\" + this.hours : this.hours;\r\n\t\tconst displayMinutes: string | number = this.minutes < 10 ? \"0\" + this.minutes : this.minutes;\r\n\t\tconst displaySeconds: string | number = this.seconds < 10 ? \"0\" + this.seconds : this.seconds;\r\n\t\tthis.timerElement.textContent = `${displayHours}:${displayMinutes}:${displaySeconds}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the timer as a string in the format \"hours:minutes:seconds\".\r\n\t * @returns The timer as a string.\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn `${this.hours}:${this.minutes}:${this.seconds}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the timer as a number (hours * 10000 + minutes * 100 + seconds).\r\n\t * @returns The timer as a number.\r\n\t */\r\n\tpublic toNumber(): number {\r\n\t\treturn this.hours * 10000 + this.minutes * 100 + this.seconds;\r\n\t}\r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,OAAO,MAAMA,KAAK,CAAC;EAOlB;AACD;AACA;EACCC,WAAWA,CAAA,EAAG;IAAA,KATJC,OAAO;IAAA,KACPC,OAAO;IAAA,KACPC,KAAK;IAAA,KACLC,YAAY;IAAA,KACZC,UAAU;IAMnB,IAAI,CAACJ,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,YAAY,GAAGE,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAgB;IACnE,IAAI,CAACF,UAAU,GAAG,IAAI;EACvB;;EAEA;AACD;AACA;EACQG,KAAKA,CAAA,EAAS;IACpB,IAAI,CAACH,UAAU,GAAGI,WAAW,CAAC,MAAM;MACnC,IAAI,CAACR,OAAO,EAAE;MACd,IAAI,IAAI,CAACA,OAAO,IAAI,EAAE,EAAE;QACvB,IAAI,CAACA,OAAO,GAAG,CAAC;QAChB,IAAI,CAACC,OAAO,EAAE;QACd,IAAI,IAAI,CAACA,OAAO,IAAI,EAAE,EAAE;UACvB,IAAI,CAACA,OAAO,GAAG,CAAC;UAChB,IAAI,CAACC,KAAK,EAAE;QACb;MACD;MACA,IAAI,CAACO,aAAa,CAAC,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACT;;EAEA;AACD;AACA;EACQC,IAAIA,CAAA,EAAS;IACnB,IAAI,IAAI,CAACN,UAAU,IAAE,IAAI,EAAC;MACzB,IAAI,CAACG,KAAK,CAAC,CAAC;IACb,CAAC,MAAK;MACLI,aAAa,CAAC,IAAI,CAACP,UAAU,CAAC;IAC/B;EACD;;EAEA;AACD;AACA;EACQQ,KAAKA,CAAA,EAAS;IACpB,IAAI,CAACZ,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACO,aAAa,CAAC,CAAC;EACrB;;EAEA;AACD;AACA;EACQA,aAAaA,CAAA,EAAS;IAC5B,MAAMI,YAA6B,GAAG,IAAI,CAACX,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK;IACrF,MAAMY,cAA+B,GAAG,IAAI,CAACb,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAACA,OAAO,GAAG,IAAI,CAACA,OAAO;IAC7F,MAAMc,cAA+B,GAAG,IAAI,CAACf,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAACA,OAAO,GAAG,IAAI,CAACA,OAAO;IAC7F,IAAI,CAACG,YAAY,CAACa,WAAW,GAAG,GAAGH,YAAY,IAAIC,cAAc,IAAIC,cAAc,EAAE;EACtF;;EAEA;AACD;AACA;AACA;EACQE,QAAQA,CAAA,EAAW;IACzB,OAAO,GAAG,IAAI,CAACf,KAAK,IAAI,IAAI,CAACD,OAAO,IAAI,IAAI,CAACD,OAAO,EAAE;EACvD;;EAEA;AACD;AACA;AACA;EACQkB,QAAQA,CAAA,EAAW;IACzB,OAAO,IAAI,CAAChB,KAAK,GAAG,KAAK,GAAG,IAAI,CAACD,OAAO,GAAG,GAAG,GAAG,IAAI,CAACD,OAAO;EAC9D;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}