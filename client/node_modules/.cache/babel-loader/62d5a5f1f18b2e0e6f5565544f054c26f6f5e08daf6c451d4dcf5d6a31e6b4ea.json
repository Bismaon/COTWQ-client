{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esteb\\\\Documents\\\\GitHub\\\\COTWQ-server\\\\client\\\\src\\\\pages\\\\QuizControl.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheet/QuizControl.css';\nimport '../stylesheet/style.css';\nimport { handleTextboxChange } from '../components/ThreeScene';\nimport CountryInfo from './CountryInfo';\nimport { Timer } from '../utils/Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizControl = () => {\n  _s();\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [gameTimer, setGameTimer] = useState(null);\n  setTimeout(() => {\n    const timer = new Timer();\n    setGameTimer(timer);\n\n    // Clean up the timer when the component unmounts\n    return () => {\n      timer.stop();\n    };\n  }, 1000); // Run this effect only once, when component mounts\n\n  useEffect(() => {\n    if (gameTimer) {\n      if (isQuizStarted) {\n        gameTimer.start();\n      } else {\n        gameTimer.stop();\n      }\n    }\n  }, [isQuizStarted, gameTimer]);\n  const handleStart = () => {\n    setIsQuizStarted(true);\n  };\n  const handlePause = () => {\n    setIsQuizStarted(false);\n    // Add any other logic needed when pausing the quiz\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quiz-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quiz-controls-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timer-cell\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"timer\",\n          children: \"00:00:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          id: \"give-up-btn\",\n          children: \"Give Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-actions\",\n        children: !isQuizStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          id: \"start-btn\",\n          onClick: handleStart,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          id: \"pause-btn\",\n          onClick: handlePause,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"answer-box-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"answer-box-text\",\n          htmlFor: \"textbox\",\n          children: \"Enter Country's Name\\xA0:\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"answer-box-input\",\n          name: \"textbox\",\n          onInput: event => handleTextboxChange(event, gameTimer),\n          autoComplete: \"off\",\n          autoCorrect: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"guessed-line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"country-counter\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\xA0/\\xA0191 guessed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountryInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizControl, \"t8ABel2vT1vYFv7fsdKiGKDI6s8=\");\n_c = QuizControl;\nexport default QuizControl;\nvar _c;\n$RefreshReg$(_c, \"QuizControl\");","map":{"version":3,"names":["React","useEffect","useState","handleTextboxChange","CountryInfo","Timer","jsxDEV","_jsxDEV","QuizControl","_s","isQuizStarted","setIsQuizStarted","gameTimer","setGameTimer","setTimeout","timer","stop","start","handleStart","handlePause","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","htmlFor","type","name","onInput","event","autoComplete","autoCorrect","_c","$RefreshReg$"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/pages/QuizControl.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../stylesheet/QuizControl.css';\r\nimport '../stylesheet/style.css';\r\nimport { handleTextboxChange } from '../components/ThreeScene';\r\nimport CountryInfo from './CountryInfo';\r\nimport { Timer } from '../utils/Timer';\r\n\r\nconst QuizControl: React.FC<{ gameMode: string }> = () => {\r\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\r\n  const [gameTimer, setGameTimer] = useState<Timer | null>(null);\r\n\r\n  setTimeout(() => {\r\n    const timer = new Timer();\r\n    setGameTimer(timer);\r\n\r\n    // Clean up the timer when the component unmounts\r\n    return () => {\r\n      timer.stop();\r\n    };\r\n  }, 1000); // Run this effect only once, when component mounts\r\n\r\n  useEffect(() => {\r\n    if (gameTimer) {\r\n      if (isQuizStarted) {\r\n        gameTimer.start();\r\n      } else {\r\n        gameTimer.stop();\r\n      }\r\n    }\r\n  }, [isQuizStarted, gameTimer]);\r\n\r\n  const handleStart = () => {\r\n    setIsQuizStarted(true);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    setIsQuizStarted(false);\r\n    // Add any other logic needed when pausing the quiz\r\n  };\r\n\r\n  return (\r\n    <div id=\"quiz-controls\">\r\n      <div id=\"quiz-controls-table\">\r\n        <div id='timer-cell'>\r\n          <div id=\"timer\">00:00:00</div>\r\n          <button className=\"button\" id=\"give-up-btn\">Give Up</button>\r\n        </div>\r\n        <div className='quiz-actions'>\r\n          {!isQuizStarted ? (\r\n            <button className=\"button\" id=\"start-btn\" onClick={handleStart}>Start</button>\r\n          ) : (\r\n            <button className=\"button\" id=\"pause-btn\" onClick={handlePause}>Pause</button>\r\n          )}\r\n        </div>\r\n        <div id='answer-box-container'>\r\n          <label id=\"answer-box-text\" htmlFor=\"textbox\">Enter Country's Name&nbsp;:&nbsp;</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"answer-box-input\"\r\n            name=\"textbox\"\r\n            onInput={(event) => handleTextboxChange(event, gameTimer)}\r\n            autoComplete=\"off\"\r\n            autoCorrect=\"off\"\r\n          />\r\n          <div id=\"guessed-line\">\r\n            <div id=\"country-counter\">0</div><div>&nbsp;/&nbsp;191 guessed</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <CountryInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}