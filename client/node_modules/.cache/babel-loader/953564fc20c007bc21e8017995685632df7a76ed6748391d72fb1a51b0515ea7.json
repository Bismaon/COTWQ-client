{"ast":null,"code":"// Menus.tsx\nimport React,{useState}from'react';import'../stylesheet/Menus.css';import'../stylesheet/style.css';import EntryBox from'./EntryBox';import CountryInfo from'./CountryInfo';import LoginForm from'../components/LoginForm';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Menus=()=>{const[menu,setMenu]=useState('main');const[showEntryPoint,setShowEntryPoint]=useState(false);const[userData,setUserData]=useState(null);// State to hold user data\nconst[username,setUsername]=useState('');const[password,setPassword]=useState('');const[userID,setUserID]=useState(null);const[error,setError]=useState('');// State to hold error message\nfunction startGame(gamemode){setShowEntryPoint(true);console.log(userID);const title=document.getElementById('title');if(title)title.style.display='none';// TODO implement gamemode selection, \n}const fetchUserData=async()=>{try{const response=await fetch('/users/fetch-user',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:userID})// Need to make the user login and keep track of his ID\n});if(response.ok){const userData=await response.json();setUserData(userData);console.log(\"succcess\");}else{const errorText=await response.text();setError(\"Failed to fetch user: \".concat(errorText));}}catch(error){console.error('Error fetching user:',error);// Handle error\n}};const renderMenu=()=>{switch(menu){case'main':return/*#__PURE__*/_jsx(MainMenu,{setMenu:setMenu});case'games':if(!showEntryPoint){return/*#__PURE__*/_jsx(GamesMenu,{startGame:startGame,setMenu:setMenu});}else{return;// No menu\n}case'profile':return/*#__PURE__*/_jsx(ProfileMenu,{setMenu:setMenu,userData:userData,setUserID:setUserID});// Pass userData to ProfileMenu\ndefault:return/*#__PURE__*/_jsx(MainMenu,{setMenu:setMenu});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(EntryBox,{showEntryPoint:showEntryPoint}),/*#__PURE__*/_jsx(\"div\",{id:\"menu-container\",children:renderMenu()}),/*#__PURE__*/_jsx(CountryInfo,{showEntryPoint:showEntryPoint})]});};const MainMenu=_ref=>{let{setMenu}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"main-buttons\",id:\"main-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('games'),children:\"Games\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"High Scores\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Settings\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('profile'),children:\"Profile\"})]});};const GamesMenu=_ref2=>{let{startGame,setMenu}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"main-buttons\",id:\"games-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('main'),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>startGame('classic'),children:\"Classic country of the world quiz\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Flag Attribution\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"No map but fills\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Sequential\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Continents\"})]});};const ProfileMenu=_ref3=>{let{setMenu,userData,setUserID}=_ref3;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-buttons\",id:\"profile-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('main'),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Edit\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"profile-box\",className:\"transparent-box\",children:userData?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Information\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"ID: \",userData.id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Username: \",userData.username]})]}):/*#__PURE__*/_jsx(LoginForm,{setUserID:setUserID})})]});};export default Menus;","map":{"version":3,"names":["React","useState","EntryBox","CountryInfo","LoginForm","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Menus","menu","setMenu","showEntryPoint","setShowEntryPoint","userData","setUserData","username","setUsername","password","setPassword","userID","setUserID","error","setError","startGame","gamemode","console","log","title","document","getElementById","style","display","fetchUserData","response","fetch","method","headers","body","JSON","stringify","id","ok","json","errorText","text","concat","renderMenu","MainMenu","GamesMenu","ProfileMenu","children","_ref","className","onClick","_ref2","_ref3"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/pages/Menus.tsx"],"sourcesContent":["// Menus.tsx\r\n\r\nimport React, {useState } from 'react';\r\nimport '../stylesheet/Menus.css';\r\nimport '../stylesheet/style.css';\r\nimport EntryBox from './EntryBox';\r\nimport CountryInfo from './CountryInfo';\r\nimport { UserModel } from '../models/UserModel';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\n\r\nconst Menus: React.FC = () => {\r\n  const [menu, setMenu] = useState<string>('main');\r\n  const [showEntryPoint, setShowEntryPoint] = useState<boolean>(false);\r\n  const [userData, setUserData] = useState<UserModel|null>(null); // State to hold user data\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userID, setUserID] = useState<number|null>(null);\r\n  const [error, setError] = useState<string>(''); // State to hold error message\r\n\r\n  function startGame(gamemode: string) {\r\n    setShowEntryPoint(true);\r\n    console.log(userID);\r\n\r\n    const title: HTMLElement | null = document.getElementById('title');\r\n    if (title) title.style.display = 'none';\r\n    // TODO implement gamemode selection, \r\n  }\r\n  \r\n  \r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch('/users/fetch-user', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ id: userID }), // Need to make the user login and keep track of his ID\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n\t\tsetUserData(userData);\r\n\t\tconsole.log(\"succcess\");\r\n      } else {\r\n        const errorText = await response.text();\r\n        setError(`Failed to fetch user: ${errorText}`);\r\n      }\r\n    } catch (error) {\r\n\t\tconsole.error('Error fetching user:', error);\r\n\t\t// Handle error\r\n\t  }\r\n  };\r\n  \r\n\r\n  const renderMenu = () => {\r\n    switch (menu) {\r\n      case 'main':\r\n        return <MainMenu setMenu={setMenu} />;\r\n      case 'games':\r\n        if (!showEntryPoint) {\r\n          return <GamesMenu startGame={startGame} setMenu={setMenu} />;\r\n        } else {\r\n          return; // No menu\r\n        }\r\n      case 'profile':\r\n        return <ProfileMenu setMenu={setMenu} userData={userData}  setUserID={setUserID}/>; // Pass userData to ProfileMenu\r\n\r\n      default:\r\n        return <MainMenu setMenu={setMenu} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EntryBox showEntryPoint={showEntryPoint} />\r\n      <div id=\"menu-container\">\r\n        {renderMenu()}\r\n      </div>\r\n      <CountryInfo showEntryPoint={showEntryPoint} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst MainMenu: React.FC<{ setMenu: (menu: string) => void }> = ({ setMenu }) => (\r\n  <div className=\"main-buttons\" id=\"main-menu\">\r\n    <button className=\"button\" onClick={() => setMenu('games')}>Games</button>\r\n    <button className=\"button\">High Scores</button>\r\n    <button className=\"button\">Settings</button>\r\n    <button className=\"button\" onClick={() => setMenu('profile')}>Profile</button>\r\n  </div>\r\n);\r\n\r\nconst GamesMenu: React.FC<{ startGame: (gamemode:string) =>void, setMenu: (menu: string) => void }>= ({startGame, setMenu}) => (\r\n  <div className=\"main-buttons\" id=\"games-menu\">\r\n    <button className=\"button\" onClick={()=>setMenu('main')}>Back</button>\r\n    <button className=\"button\" onClick={()=>startGame('classic')}>Classic country of the world quiz</button>\r\n    <button className=\"button\">Flag Attribution</button>\r\n    <button className=\"button\">No map but fills</button>\r\n    <button className=\"button\">Sequential</button>\r\n    <button className=\"button\">Continents</button>\r\n  </div>\r\n);\r\n\r\nconst ProfileMenu: React.FC<{ setMenu: (menu: string) => void, userData:UserModel|null, setUserID: (userID:number)=>void}> = ({ setMenu, userData, setUserID}) => (\r\n\t<>\r\n    <div className=\"main-buttons\" id=\"profile-menu\">\r\n      <button className=\"button\" onClick={() => setMenu('main')}>\r\n        Back\r\n      </button>\r\n      <button className=\"button\">Edit</button>\r\n    </div>\r\n    <div id=\"profile-box\" className='transparent-box'>\r\n\t\t{userData ? (\r\n          <>\r\n            <h2>User Information</h2>\r\n            <p>ID: {userData.id}</p>\r\n            <p>Username: {userData.username}</p>\r\n            {/* Add more fields as needed */}\r\n          </>\r\n        ) : (<LoginForm setUserID={setUserID}/>)}\r\n\t</div>\r\n  </>\r\n);\r\nexport default Menus;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}