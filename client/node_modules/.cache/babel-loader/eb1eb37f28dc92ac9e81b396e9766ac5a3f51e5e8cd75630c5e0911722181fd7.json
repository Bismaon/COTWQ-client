{"ast":null,"code":"// Country.ts\n/**\r\n * Represents a country.\r\n */export class Country{/**\r\n\t * Creates an instance of Country.\r\n\t * @param {string} countryName - The name of the country.\r\n\t * @param {string[]} acceptedNames - The accepted names of the country.\r\n\t * @param {number[][] | null} territoriesLocation - The locations of territories (if any) belonging to the country.\r\n\t * @param {number[]} countryLocation - The indexes location of the country.\r\n\t * @param {number[] | null} ownerLocation - The location of the owner (if any) of the country.\r\n\t */constructor(countryName,acceptedNames,territoriesLocation,countryLocation,ownerLocation){this.countryName=void 0;this.acceptedNames=void 0;this.territoriesLocation=void 0;this.countryLocation=void 0;this.ownerLocation=void 0;this.isFound=void 0;this.countryName=countryName;this.acceptedNames=acceptedNames;this.territoriesLocation=territoriesLocation;this.countryLocation=countryLocation;this.ownerLocation=ownerLocation;this.isFound=false;}/**\r\n\t * Get the found status of the country.\r\n\t * @returns {boolean} True if the country is found, otherwise false.\r\n\t */getFound(){return this.isFound;}/**\r\n\t * Set the found status of the country.\r\n\t * @param {boolean} isFound - The found status to set.\r\n\t */setFound(isFound){this.isFound=isFound;}/**\r\n\t * Get the location of the country owning this country.\r\n\t * @returns {number[]} The location of the owner.\r\n\t */getOwnerLocation(){return this.ownerLocation;}/**\r\n\t * Set the location of the country owning this country.\r\n\t * @param {number[]} ownedLocation - The location of the owner to set.\r\n\t */setOwnerLocation(ownedLocation){this.ownerLocation=ownedLocation;}/**\r\n\t * Get the name of the country.\r\n\t * @returns {string} The name of the country.\r\n\t */getCountryName(){return this.countryName;}/**\r\n\t * Set the name of the country.\r\n\t * @param {string} countryName - The name of the country to set.\r\n\t */setCountryName(countryName){this.countryName=countryName;}/**\r\n\t * Get the accepted names of the country.\r\n\t * @returns {string[]} The accepted names of the country.\r\n\t */getAcceptedNames(){return this.acceptedNames;}/**\r\n\t * Set the accepted names of the country.\r\n\t * @param {string[]} acceptedNames - The accepted names of the country to set.\r\n\t */setAcceptedNames(acceptedNames){this.acceptedNames=acceptedNames;}/**\r\n\t * Get the indexes location of the country.\r\n\t * @returns {number[]} The indexes location of the country.\r\n\t */getCountryLocation(){return this.countryLocation;}/**\r\n\t * Set the indexes location of the country.\r\n\t * @param {number[]} countryLocation - The indexes location of the country to set.\r\n\t */setCountryLocation(countryLocation){this.countryLocation=countryLocation;}/**\r\n\t * Get the locations of territories belonging to the country.\r\n\t * @returns {number[][]} The locations of territories belonging to the country.\r\n\t */getTerritoriesLocation(){return this.territoriesLocation||[];}/**\r\n\t * Set the locations of territories belonging to the country.\r\n\t * @param {number[][]} territoriesLocation - The locations of territories to set.\r\n\t */setTerritoriesLocation(territoriesLocation){this.territoriesLocation=territoriesLocation;}}","map":{"version":3,"names":["Country","constructor","countryName","acceptedNames","territoriesLocation","countryLocation","ownerLocation","isFound","getFound","setFound","getOwnerLocation","setOwnerLocation","ownedLocation","getCountryName","setCountryName","getAcceptedNames","setAcceptedNames","getCountryLocation","setCountryLocation","getTerritoriesLocation","setTerritoriesLocation"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/models/Country.ts"],"sourcesContent":["// Country.ts\r\n\r\n/**\r\n * Represents a country.\r\n */\r\nexport class Country {\r\n\tprotected countryName: string;\r\n\tprotected acceptedNames: string[];\r\n\tprotected territoriesLocation: number[][] | null;\r\n\tprotected countryLocation: number[];\r\n\tprotected ownerLocation: number[] | null;\r\n\tprotected isFound: boolean;\r\n\r\n\t/**\r\n\t * Creates an instance of Country.\r\n\t * @param {string} countryName - The name of the country.\r\n\t * @param {string[]} acceptedNames - The accepted names of the country.\r\n\t * @param {number[][] | null} territoriesLocation - The locations of territories (if any) belonging to the country.\r\n\t * @param {number[]} countryLocation - The indexes location of the country.\r\n\t * @param {number[] | null} ownerLocation - The location of the owner (if any) of the country.\r\n\t */\r\n\tconstructor(countryName: string, acceptedNames: string[], \t\r\n\t\t\t\tterritoriesLocation: number[][] | null, \r\n\t\t\t\tcountryLocation: number[], ownerLocation: number[] | null) {\r\n\t\tthis.countryName = countryName;\r\n\t\tthis.acceptedNames = acceptedNames;\r\n\t\tthis.territoriesLocation = territoriesLocation;\r\n\t\tthis.countryLocation = countryLocation;\r\n\t\tthis.ownerLocation = ownerLocation;\r\n\t\tthis.isFound = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the found status of the country.\r\n\t * @returns {boolean} True if the country is found, otherwise false.\r\n\t */\r\n\tpublic getFound(): boolean {\r\n\t\treturn this.isFound;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the found status of the country.\r\n\t * @param {boolean} isFound - The found status to set.\r\n\t */\r\n\tpublic setFound(isFound: boolean): void {\r\n\t\tthis.isFound = isFound;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the location of the country owning this country.\r\n\t * @returns {number[]} The location of the owner.\r\n\t */\r\n\tpublic getOwnerLocation(): number[] | null {\r\n\t\treturn this.ownerLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the location of the country owning this country.\r\n\t * @param {number[]} ownedLocation - The location of the owner to set.\r\n\t */\r\n\tpublic setOwnerLocation(ownedLocation: number[] | null): void {\r\n\t\tthis.ownerLocation = ownedLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the name of the country.\r\n\t * @returns {string} The name of the country.\r\n\t */\r\n\tpublic getCountryName(): string {\r\n\t\treturn this.countryName;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the name of the country.\r\n\t * @param {string} countryName - The name of the country to set.\r\n\t */\r\n\tpublic setCountryName(countryName: string): void {\r\n\t\tthis.countryName = countryName;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the accepted names of the country.\r\n\t * @returns {string[]} The accepted names of the country.\r\n\t */\r\n\tpublic getAcceptedNames(): string[] {\r\n\t\treturn this.acceptedNames;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the accepted names of the country.\r\n\t * @param {string[]} acceptedNames - The accepted names of the country to set.\r\n\t */\r\n\tpublic setAcceptedNames(acceptedNames: string[]): void {\r\n\t\tthis.acceptedNames = acceptedNames;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the indexes location of the country.\r\n\t * @returns {number[]} The indexes location of the country.\r\n\t */\r\n\tpublic getCountryLocation(): number[] {\r\n\t\treturn this.countryLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the indexes location of the country.\r\n\t * @param {number[]} countryLocation - The indexes location of the country to set.\r\n\t */\r\n\tpublic setCountryLocation(countryLocation: number[]): void {\r\n\t\tthis.countryLocation = countryLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the locations of territories belonging to the country.\r\n\t * @returns {number[][]} The locations of territories belonging to the country.\r\n\t */\r\n\tpublic getTerritoriesLocation(): number[][] {\r\n\t\treturn this.territoriesLocation || [];\r\n\t}\r\n\r\n\t/**\r\n\t * Set the locations of territories belonging to the country.\r\n\t * @param {number[][]} territoriesLocation - The locations of territories to set.\r\n\t */\r\n\tpublic setTerritoriesLocation(territoriesLocation: number[][]): void {\r\n\t\tthis.territoriesLocation = territoriesLocation;\r\n\t}\r\n}\r\n"],"mappings":"AAAA;AAEA;AACA;AACA,GACA,MAAO,MAAM,CAAAA,OAAQ,CAQpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IACCC,WAAWA,CAACC,WAAmB,CAAEC,aAAuB,CACrDC,mBAAsC,CACtCC,eAAyB,CAAEC,aAA8B,CAAE,MAjBpDJ,WAAW,aACXC,aAAa,aACbC,mBAAmB,aACnBC,eAAe,aACfC,aAAa,aACbC,OAAO,QAahB,IAAI,CAACL,WAAW,CAAGA,WAAW,CAC9B,IAAI,CAACC,aAAa,CAAGA,aAAa,CAClC,IAAI,CAACC,mBAAmB,CAAGA,mBAAmB,CAC9C,IAAI,CAACC,eAAe,CAAGA,eAAe,CACtC,IAAI,CAACC,aAAa,CAAGA,aAAa,CAClC,IAAI,CAACC,OAAO,CAAG,KAAK,CACrB,CAEA;AACD;AACA;AACA,IACQC,QAAQA,CAAA,CAAY,CAC1B,MAAO,KAAI,CAACD,OAAO,CACpB,CAEA;AACD;AACA;AACA,IACQE,QAAQA,CAACF,OAAgB,CAAQ,CACvC,IAAI,CAACA,OAAO,CAAGA,OAAO,CACvB,CAEA;AACD;AACA;AACA,IACQG,gBAAgBA,CAAA,CAAoB,CAC1C,MAAO,KAAI,CAACJ,aAAa,CAC1B,CAEA;AACD;AACA;AACA,IACQK,gBAAgBA,CAACC,aAA8B,CAAQ,CAC7D,IAAI,CAACN,aAAa,CAAGM,aAAa,CACnC,CAEA;AACD;AACA;AACA,IACQC,cAAcA,CAAA,CAAW,CAC/B,MAAO,KAAI,CAACX,WAAW,CACxB,CAEA;AACD;AACA;AACA,IACQY,cAAcA,CAACZ,WAAmB,CAAQ,CAChD,IAAI,CAACA,WAAW,CAAGA,WAAW,CAC/B,CAEA;AACD;AACA;AACA,IACQa,gBAAgBA,CAAA,CAAa,CACnC,MAAO,KAAI,CAACZ,aAAa,CAC1B,CAEA;AACD;AACA;AACA,IACQa,gBAAgBA,CAACb,aAAuB,CAAQ,CACtD,IAAI,CAACA,aAAa,CAAGA,aAAa,CACnC,CAEA;AACD;AACA;AACA,IACQc,kBAAkBA,CAAA,CAAa,CACrC,MAAO,KAAI,CAACZ,eAAe,CAC5B,CAEA;AACD;AACA;AACA,IACQa,kBAAkBA,CAACb,eAAyB,CAAQ,CAC1D,IAAI,CAACA,eAAe,CAAGA,eAAe,CACvC,CAEA;AACD;AACA;AACA,IACQc,sBAAsBA,CAAA,CAAe,CAC3C,MAAO,KAAI,CAACf,mBAAmB,EAAI,EAAE,CACtC,CAEA;AACD;AACA;AACA,IACQgB,sBAAsBA,CAAChB,mBAA+B,CAAQ,CACpE,IAAI,CAACA,mBAAmB,CAAGA,mBAAmB,CAC/C,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}