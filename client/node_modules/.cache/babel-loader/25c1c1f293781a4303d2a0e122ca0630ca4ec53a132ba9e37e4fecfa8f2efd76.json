{"ast":null,"code":"// UserForm.tsx\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserForm=()=>{const[username,setUsername]=useState('');const handleSubmit=async event=>{event.preventDefault();try{const response=await fetch('/users',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username})});if(response.ok){const newUser=await response.json();console.log('New user created:',newUser);// Handle success as needed\n}else{console.error('Failed to create user:',response.statusText);// Handle failure\n}}catch(error){console.error('Error creating user:',error);// Handle error\n}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Username:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create User\"})]});};export default UserForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","UserForm","username","setUsername","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","newUser","json","console","log","error","statusText","onSubmit","children","type","value","onChange","e","target","required"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/components/UserForm.tsx"],"sourcesContent":["// UserForm.tsx\nimport React, { useState } from 'react';\n\nconst UserForm: React.FC = () => {\n  const [username, setUsername] = useState('');\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username }),\n      });\n\n      if (response.ok) {\n        const newUser = await response.json();\n        console.log('New user created:', newUser);\n        // Handle success as needed\n      } else {\n        console.error('Failed to create user:', response.statusText);\n        // Handle failure\n      }\n    } catch (error) {\n      console.error('Error creating user:', error);\n      // Handle error\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Username:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n      </label>\n      <button type=\"submit\">Create User</button>\n    </form>\n  );\n};\n\nexport default UserForm;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,QAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAQ,YAAY,CAAG,KAAO,CAAAC,KAAuC,EAAK,CACtEA,KAAK,CAACC,cAAc,CAAC,CAAC,CAEtB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,QAAQ,CAAE,CACrCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEX,QAAS,CAAC,CACnC,CAAC,CAAC,CAEF,GAAIK,QAAQ,CAACO,EAAE,CAAE,CACf,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACrCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEH,OAAO,CAAC,CACzC;AACF,CAAC,IAAM,CACLE,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAEZ,QAAQ,CAACa,UAAU,CAAC,CAC5D;AACF,CACF,CAAE,MAAOD,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C;AACF,CACF,CAAC,CAED,mBACEnB,KAAA,SAAMqB,QAAQ,CAAEjB,YAAa,CAAAkB,QAAA,eAC3BtB,KAAA,UAAAsB,QAAA,EAAO,WAEL,cAAAxB,IAAA,UACEyB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEtB,QAAS,CAChBuB,QAAQ,CAAGC,CAAC,EAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,QAAQ,MACT,CAAC,EACG,CAAC,cACR9B,IAAA,WAAQyB,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,aAAW,CAAQ,CAAC,EACtC,CAAC,CAEX,CAAC,CAED,cAAe,CAAArB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}