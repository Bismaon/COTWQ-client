{"ast":null,"code":"import React,{useEffect,useState}from'react';import ReactDOM from'react-dom';import'../stylesheet/QuizControl.css';import'../stylesheet/style.css';import{handleTextboxChange}from'../components/ThreeScene';import CountryInfo from'./CountryInfo';import{Timer}from'../utils/Timer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizControl=_ref=>{let{gameMode}=_ref;const[isQuizStarted,setIsQuizStarted]=useState(false);const[gameTimer,setGameTimer]=useState(null);const[container]=useState(()=>document.createElement('div'));useEffect(()=>{document.body.appendChild(container);return()=>{document.body.removeChild(container);};},[container]);useEffect(()=>{const timer=new Timer();setGameTimer(timer);// Clean up the timer when the component unmounts\nreturn()=>{timer.stop();};},[]);useEffect(()=>{if(gameTimer){if(isQuizStarted){gameTimer.start();}else{gameTimer.stop();}}},[isQuizStarted,gameTimer]);const handleStart=()=>{setIsQuizStarted(true);};const handlePause=()=>{setIsQuizStarted(false);};return/*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxs(\"div\",{id:\"quiz-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"quiz-controls-table\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"timer-cell\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"timer\",children:\"00:00:00\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",id:\"give-up-btn\",children:\"Give Up\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quiz-actions\",children:!isQuizStarted?/*#__PURE__*/_jsx(\"button\",{className:\"button\",id:\"start-btn\",onClick:handleStart,children:\"Start\"}):/*#__PURE__*/_jsx(\"button\",{className:\"button\",id:\"pause-btn\",onClick:handlePause,children:\"Pause\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"answer-box-container\",children:[/*#__PURE__*/_jsx(\"label\",{id:\"answer-box-text\",htmlFor:\"textbox\",children:\"Enter Country's Name\\xA0:\\xA0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"answer-box-input\",name:\"textbox\",onInput:event=>handleTextboxChange(event,gameTimer),autoComplete:\"off\",autoCorrect:\"off\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"guessed-line\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"country-counter\",children:\"0\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\xA0/\\xA0191 guessed\"})]})]})]}),/*#__PURE__*/_jsx(CountryInfo,{})]}),container);};export default QuizControl;","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","handleTextboxChange","CountryInfo","Timer","jsx","_jsx","jsxs","_jsxs","QuizControl","_ref","gameMode","isQuizStarted","setIsQuizStarted","gameTimer","setGameTimer","container","document","createElement","body","appendChild","removeChild","timer","stop","start","handleStart","handlePause","createPortal","id","children","className","onClick","htmlFor","type","name","onInput","event","autoComplete","autoCorrect"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/pages/QuizControl.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../stylesheet/QuizControl.css';\r\nimport '../stylesheet/style.css';\r\nimport { handleTextboxChange } from '../components/ThreeScene';\r\nimport CountryInfo from './CountryInfo';\r\nimport { Timer } from '../utils/Timer';\r\n\r\nconst QuizControl: React.FC<{ gameMode: string }> = ({ gameMode }) => {\r\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\r\n  const [gameTimer, setGameTimer] = useState<Timer | null>(null);\r\n  const [container] = useState(() => document.createElement('div'));\r\n\r\n  useEffect(() => {\r\n    document.body.appendChild(container);\r\n    return () => {\r\n      document.body.removeChild(container);\r\n    };\r\n  }, [container]);\r\n\r\n  useEffect(() => {\r\n    const timer = new Timer();\r\n    setGameTimer(timer);\r\n\r\n    // Clean up the timer when the component unmounts\r\n    return () => {\r\n      timer.stop();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (gameTimer) {\r\n      if (isQuizStarted) {\r\n        gameTimer.start();\r\n      } else {\r\n        gameTimer.stop();\r\n      }\r\n    }\r\n  }, [isQuizStarted, gameTimer]);\r\n\r\n  const handleStart = () => {\r\n    setIsQuizStarted(true);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    setIsQuizStarted(false);\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div id=\"quiz-controls\">\r\n      <div id=\"quiz-controls-table\">\r\n        <div id='timer-cell'>\r\n          <div id=\"timer\">00:00:00</div>\r\n          <button className=\"button\" id=\"give-up-btn\">Give Up</button>\r\n        </div>\r\n        <div className='quiz-actions'>\r\n          {!isQuizStarted ? (\r\n            <button className=\"button\" id=\"start-btn\" onClick={handleStart}>Start</button>\r\n          ) : (\r\n            <button className=\"button\" id=\"pause-btn\" onClick={handlePause}>Pause</button>\r\n          )}\r\n        </div>\r\n        <div id='answer-box-container'>\r\n          <label id=\"answer-box-text\" htmlFor=\"textbox\">Enter Country's Name&nbsp;:&nbsp;</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"answer-box-input\"\r\n            name=\"textbox\"\r\n            onInput={(event) => handleTextboxChange(event, gameTimer)}\r\n            autoComplete=\"off\"\r\n            autoCorrect=\"off\"\r\n          />\r\n          <div id=\"guessed-line\">\r\n            <div id=\"country-counter\">0</div><div>&nbsp;/&nbsp;191 guessed</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <CountryInfo />\r\n    </div>,\r\n    container\r\n  );\r\n};\r\n\r\nexport default QuizControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}