{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginForm=_ref=>{let{setUserID}=_ref;const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState(null);const handleSetUserID=id=>{setUserID(id);// Perform additional actions if needed\nconsole.log('User ID set to:',id);};const handleLogin=async event=>{event.preventDefault();try{const response=await fetch('/users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});console.log('Raw response:',response);if(response.ok){const{data}=await response.json();console.log(data);handleSetUserID(data);console.log('User logged in:',data);}else{const errorText=await response.text();setError(\"Failed to login: \".concat(errorText));}}catch(error){console.error('Error logging in:',error);setError('An error occurred during login.');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Username:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Password:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});};export default LoginForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","LoginForm","_ref","setUserID","username","setUsername","password","setPassword","error","setError","handleSetUserID","id","console","log","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","errorText","text","concat","onSubmit","children","type","value","onChange","e","target","required","style","color"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface LoginFormProps {\n  setUserID: (userID: number) => void;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ setUserID }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const handleSetUserID = (id: number) => {\n    setUserID(id);\n    // Perform additional actions if needed\n    console.log('User ID set to:', id);\n  };\n\n  const handleLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n\tevent.preventDefault();\n\ttry {\n\t  const response = await fetch('/users/login', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t  'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ username, password }),\n\t  });\n  \n\t  console.log('Raw response:', response);\n  \n\t  if (response.ok) {\n\t\tconst {data} = await response.json();\n\t\tconsole.log(data)\n\t\thandleSetUserID(data);\n\t\tconsole.log('User logged in:', data);\n\t  } else {\n\t\tconst errorText = await response.text();\n\t\tsetError(`Failed to login: ${errorText}`);\n\t  }\n\t} catch (error) {\n\t  console.error('Error logging in:', error);\n\t  setError('An error occurred during login.');\n\t}\n  };\n  \n\n  return (\n    <form onSubmit={handleLogin}>\n      <label>\n        Username:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Password:\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button type=\"submit\">Login</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMxC,KAAM,CAAAC,SAAmC,CAAGC,IAAA,EAAmB,IAAlB,CAAEC,SAAU,CAAC,CAAAD,IAAA,CACxD,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAAAc,eAAe,CAAIC,EAAU,EAAK,CACtCR,SAAS,CAACQ,EAAE,CAAC,CACb;AACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEF,EAAE,CAAC,CACpC,CAAC,CAED,KAAM,CAAAG,WAAW,CAAG,KAAO,CAAAC,KAAuC,EAAK,CACxEA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CAC9CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEnB,QAAQ,CAAEE,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEFM,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEI,QAAQ,CAAC,CAEtC,GAAIA,QAAQ,CAACO,EAAE,CAAE,CAClB,KAAM,CAACC,IAAI,CAAC,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACpCd,OAAO,CAACC,GAAG,CAACY,IAAI,CAAC,CACjBf,eAAe,CAACe,IAAI,CAAC,CACrBb,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEY,IAAI,CAAC,CACnC,CAAC,IAAM,CACR,KAAM,CAAAE,SAAS,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CACvCnB,QAAQ,qBAAAoB,MAAA,CAAqBF,SAAS,CAAE,CAAC,CACxC,CACF,CAAE,MAAOnB,KAAK,CAAE,CACdI,OAAO,CAACJ,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzCC,QAAQ,CAAC,iCAAiC,CAAC,CAC7C,CACC,CAAC,CAGD,mBACET,KAAA,SAAM8B,QAAQ,CAAEhB,WAAY,CAAAiB,QAAA,eAC1B/B,KAAA,UAAA+B,QAAA,EAAO,WAEL,cAAAjC,IAAA,UACEkC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE7B,QAAS,CAChB8B,QAAQ,CAAGC,CAAC,EAAK9B,WAAW,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,QAAQ,MACT,CAAC,EACG,CAAC,cACRrC,KAAA,UAAA+B,QAAA,EAAO,WAEL,cAAAjC,IAAA,UACEkC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAE3B,QAAS,CAChB4B,QAAQ,CAAGC,CAAC,EAAK5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,QAAQ,MACT,CAAC,EACG,CAAC,cACRvC,IAAA,WAAQkC,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAC,OAAK,CAAQ,CAAC,CACnCvB,KAAK,eAAIV,IAAA,MAAGwC,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAEvB,KAAK,CAAI,CAAC,EAC7C,CAAC,CAEX,CAAC,CAED,cAAe,CAAAP,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}