{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../stylesheet/Menus.css';import'../stylesheet/style.css';import LoginForm from'../components/LoginForm';import UserInformation from'../components/UserInformation';import QuizControl from'./QuizControl';import{toggleIsPlaying}from'../utils/scene';import{timer}from'../components/ThreeScene';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Menus=()=>{const[menu,setMenu]=useState('main');const[gameMode,setGameMode]=useState(null);// State to manage game mode\nconst[userID,setUserID]=useState(null);function startGame(gamemode){console.log(\"startGame called with gamemode:\",gamemode);console.log(\"userID:\",userID);//WORKS \nsetGameMode(gamemode);toggleIsPlaying();const title=document.getElementById('title');if(title)title.style.display='none';}useEffect(()=>{if(gameMode){console.log(\"gameMode changed, calling timer.reset()\");// Ensure timer.reset() is called after QuizControl is rendered\nsetTimeout(()=>{if(document.getElementById(\"timer\")){timer.reset();}else{console.error(\"Timer element not found\");}},1000);}},[gameMode]);function renderMenu(){switch(menu){case'main':return/*#__PURE__*/_jsx(MainMenu,{setMenu:setMenu});case'games':return/*#__PURE__*/_jsx(GamesMenu,{startGame:startGame,setMenu:setMenu});case'profile':return/*#__PURE__*/_jsx(ProfileMenu,{setMenu:setMenu,setUserID:setUserID,userID:userID});default:return/*#__PURE__*/_jsx(MainMenu,{setMenu:setMenu});}}console.log(\"Rendering Menus component with gameMode:\",gameMode);return/*#__PURE__*/_jsx(_Fragment,{children:gameMode?/*#__PURE__*/_jsx(QuizControl,{gameMode:gameMode}):/*#__PURE__*/_jsx(\"div\",{id:\"menu-container\",children:renderMenu()})});};const MainMenu=_ref=>{let{setMenu}=_ref;console.log(\"Rendering MainMenu\");return/*#__PURE__*/_jsxs(\"div\",{className:\"main-buttons\",id:\"main-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('games'),children:\"Games\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"High Scores\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Settings\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('profile'),children:\"Profile\"})]});};const GamesMenu=_ref2=>{let{startGame,setMenu}=_ref2;console.log(\"Rendering GamesMenu\");return/*#__PURE__*/_jsxs(\"div\",{className:\"main-buttons\",id:\"games-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('main'),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>startGame('classic'),children:\"Classic country of the world quiz\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Flag Attribution\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"No map but fills\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Sequential\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Continents\"})]});};const ProfileMenu=_ref3=>{let{setMenu,setUserID,userID}=_ref3;console.log(\"Rendering ProfileMenu\");return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-buttons\",id:\"profile-menu\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMenu('main'),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Edit\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"profile-box\",className:\"transparent-box\",children:userID?/*#__PURE__*/_jsx(UserInformation,{userID:userID}):/*#__PURE__*/_jsx(LoginForm,{setUserID:setUserID})})]});};export default Menus;","map":{"version":3,"names":["React","useState","useEffect","LoginForm","UserInformation","QuizControl","toggleIsPlaying","timer","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Menus","menu","setMenu","gameMode","setGameMode","userID","setUserID","startGame","gamemode","console","log","title","document","getElementById","style","display","setTimeout","reset","error","renderMenu","MainMenu","GamesMenu","ProfileMenu","children","id","_ref","className","onClick","_ref2","_ref3"],"sources":["C:/Users/esteb/Documents/GitHub/COTWQ-server/client/src/pages/Menus.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../stylesheet/Menus.css';\r\nimport '../stylesheet/style.css';\r\nimport LoginForm from '../components/LoginForm';\r\nimport UserInformation from '../components/UserInformation';\r\nimport QuizControl from './QuizControl';\r\nimport { toggleIsPlaying } from '../utils/scene';\r\nimport { timer } from '../components/ThreeScene';\r\n\r\nconst Menus: React.FC = () => {\r\n  const [menu, setMenu] = useState<string>('main');\r\n  const [gameMode, setGameMode] = useState<string | null>(null); // State to manage game mode\r\n  const [userID, setUserID] = useState<number | null>(null);\r\n\r\n  function startGame(gamemode: string) {\r\n    console.log(\"startGame called with gamemode:\", gamemode);\r\n    console.log(\"userID:\", userID); //WORKS \r\n    setGameMode(gamemode);\r\n    toggleIsPlaying();\r\n    const title: HTMLElement | null = document.getElementById('title');\r\n    if (title) title.style.display = 'none';\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (gameMode) {\r\n      console.log(\"gameMode changed, calling timer.reset()\");\r\n      // Ensure timer.reset() is called after QuizControl is rendered\r\n      setTimeout(() => {\r\n        if (document.getElementById(\"timer\")) {\r\n          timer.reset();\r\n        } else {\r\n          console.error(\"Timer element not found\");\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [gameMode]);\r\n\r\n  function renderMenu() {\r\n    switch (menu) {\r\n      case 'main':\r\n        return <MainMenu setMenu={setMenu} />;\r\n      case 'games':\r\n        return <GamesMenu startGame={startGame} setMenu={setMenu} />;\r\n      case 'profile':\r\n        return <ProfileMenu setMenu={setMenu} setUserID={setUserID} userID={userID} />;\r\n      default:\r\n        return <MainMenu setMenu={setMenu} />;\r\n    }\r\n  }\r\n\r\n  console.log(\"Rendering Menus component with gameMode:\", gameMode);\r\n\r\n  return (\r\n    <>\r\n      {gameMode\r\n        ? <QuizControl gameMode={gameMode} />\r\n        : <div id=\"menu-container\">\r\n          {renderMenu()}\r\n        </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MainMenu: React.FC<{ setMenu: (menu: string) => void }> = ({ setMenu }) => {\r\n  console.log(\"Rendering MainMenu\");\r\n  return (\r\n    <div className=\"main-buttons\" id=\"main-menu\">\r\n      <button className=\"button\" onClick={() => setMenu('games')}>Games</button>\r\n      <button className=\"button\">High Scores</button>\r\n      <button className=\"button\">Settings</button>\r\n      <button className=\"button\" onClick={() => setMenu('profile')}>Profile</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GamesMenu: React.FC<{ startGame: (gamemode: string) => void, setMenu: (menu: string) => void }> = ({ startGame, setMenu }) => {\r\n  console.log(\"Rendering GamesMenu\");\r\n  return (\r\n    <div className=\"main-buttons\" id=\"games-menu\">\r\n      <button className=\"button\" onClick={() => setMenu('main')}>Back</button>\r\n      <button className=\"button\" onClick={() => startGame('classic')}>Classic country of the world quiz</button>\r\n      <button className=\"button\">Flag Attribution</button>\r\n      <button className=\"button\">No map but fills</button>\r\n      <button className=\"button\">Sequential</button>\r\n      <button className=\"button\">Continents</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileMenu: React.FC<{ setMenu: (menu: string) => void, setUserID: (userID: number) => void, userID: number | null }> = ({ setMenu, setUserID, userID }) => {\r\n  console.log(\"Rendering ProfileMenu\");\r\n  return (\r\n    <>\r\n      <div className=\"main-buttons\" id=\"profile-menu\">\r\n        <button className=\"button\" onClick={() => setMenu('main')}>\r\n          Back\r\n        </button>\r\n        <button className=\"button\">Edit</button>\r\n      </div>\r\n      <div id=\"profile-box\" className='transparent-box'>\r\n        {userID ? (<UserInformation userID={userID} />)\r\n          : (<LoginForm setUserID={setUserID} />)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}